---
# name: ansible-roles
# file: inventory/host_vars/logindefs.yml

meta_description: 'Ansible role for configuring /etc/login.defs.'
meta_year_created: 2024

meta_platforms:
  - { distribution: AlmaLinux, os_family: RedHat, tags: ['latest'] }
  - { distribution: Archlinux, os_family: Archlinux, tags: ['latest'] }
  - { distribution: Debian, os_family: Debian, tags: ['latest'] }
  - { distribution: Fedora, os_family: RedHat, tags: ['latest'] }
  - { distribution: OpenSuse Leap, os_family: Suse, tags: ['latest'] }
  - { distribution: Ubuntu, os_family: Debian, tags: ['latest'] }

mole_playbooks:
  - name: resources/playbooks/verify.yml
    content: |-
      - name: "PLAYBOOK | Verify | {{ meta_role_name }}"
        hosts: all
        gather_facts: true
        become: true
        tasks:
          - name: "Ensure util-linux is installed"
            ansible.builtin.package:
              name: "util-linux"
              state: "present"

          - name: "Create testuser with useradd"
            ansible.builtin.command:
              cmd: "useradd -m -s /bin/bash testuser"
            register: _useradd
            changed_when: false
            failed_when: _useradd.rc > 0 and not "already exists" in _useradd.stderr

          - name: "Check home directory permissions"
            ansible.builtin.stat:
              path: "/home/testuser"
            register: home_stat

          - name: "Verify home directory permissions"
            ansible.builtin.assert:
              that: home_stat.stat.mode == '0700'
              fail_msg: "Home directory permissions are not 0700"
              success_msg: "Home directory permissions are 0700"

          - name: "Set password for testuser"
            become: true
            become_user: testuser
            ansible.builtin.command:
              cmd: "echo 'testuser:Test123blabla,0815' | chpasswd"
            changed_when: false

          - name: "Check if testuser can login"
            ansible.builtin.command:
              cmd: "su - testuser -c 'whoami'"
            register: _login
            changed_when: false

          - name: "Check if testuser can login"
            ansible.builtin.command:
              cmd: "chage -l testuser"
            register: _chage
            changed_when: false
            failed_when: not '384' in _chage.stdout

          - name: "Clean up test user"
            ansible.builtin.command:
              cmd: "userdel -r testuser"
            changed_when: false
