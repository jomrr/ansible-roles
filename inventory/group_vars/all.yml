---
# name: ansible-roles
# file: inventory/group_vars/all.yml

# base dirctory of this project
conf_base_dir: "~/src/ansible/ansible-roles"
# directory where roles repositories are cloned
conf_role_dir: "~/src/ansible/roles"

# --- default values for all roles ---------------------------------------------

# default meta data
meta_author: Jonas Mauer
meta_allow_duplicates: false
meta_company: none
meta_description: 'Ansible role for setting up {{ meta_role_name }}.'
meta_galaxy_tags: []
meta_issue_tracker_url: "{{ meta_repo_url }}/issues"
meta_license: MIT
meta_min_ansible_version: "2.17"
meta_namespace: jomrr
meta_platforms:
  - { distribution: AlmaLinux, os_family: RedHat, tags: ['8', '9'] }
  - { distribution: Alpine, os_family: Alpine, tags: ['3.18', '3.19'] }
  - { distribution: Archlinux, os_family: Archlinux, tags: ['latest'] }
  - { distribution: Debian, os_family: Debian, tags: ['11', '12', '13'] }
  - { distribution: Fedora, os_family: RedHat, tags: ['40', 'rawhide'] }
  - { distribution: OpenSuse Leap, os_family: Suse, tags: ['15'] }
  - { distribution: Ubuntu, os_family: Debian, tags: ['22.04', '24.04'] }
meta_role_name: "{{ inventory_hostname }}"
meta_repo_name: "ansible-role-{{ meta_role_name }}"
meta_repo_url: "https://github.com/{{ meta_namespace }}/{{ meta_repo_name }}"
meta_year_created: '2024'

# default requirements
reqs_collections:
  - name: community.general
reqs_packages: []
reqs_pip: []
reqs_roles: []

# default readme settings
read_description: |-
  This Ansible role installs and configures {{ meta_role_name }} on supported platforms.
# role default variables from meta/argument_specs.yml
read_variables: []
# Example playbooks
read_examples:
  - name: Simple example playbook
    description: |-
      A simple default example playbook for using {{ meta_namespace }}.{{ meta_role_name }}.
    code: |-
      ---
      # name: "{{ meta_namespace }}.{{ meta_role_name }}"
      # file: "playbook_{{ meta_role_name }}.yml"

      - name: "PLAYBOOK | {{ meta_role_name }}"
        hosts: "{{ meta_role_name }}_hosts"
        gather_facts: true
        roles:
          - role: "{{ meta_namespace }}.{{ meta_role_name }}"
# references as single line in markdown
read_references: []

# default molecule scenario(s)
mole_scenarios:
  - scenario:
      name: default
    dependency: {
      name: galaxy,
      requirements-file: meta/requirements.yml
    }
    driver: { name: podman }
    lint: set -e; ansible-lint
    provisioner: {
      name: ansible,
      config_options: {
        defaults: {
          interpreter_python: auto_silent,
          callback_whitelist: "profile_tasks, timer, yaml",
        },
        ssh_connection: { pipelining: true }
      },
      log: true,
      playbooks: {
        converge: ../resources/playbooks/converge.yml,
        verify: ../resources/playbooks/verify.yml,
      },
    }
    verifier: { name: ansible }
    platforms:
      - name: "{{ meta_role_name }}"
        image: "docker.io/${uns:-{{ meta_namespace }}}/molecule-${img:-fedora}:${tag:-latest}"
        pre_build_image: true
        entrypoint: null
        command: null
        systemd: true
  - scenario:
      name: all
    dependency: {
      name: galaxy,
      requirements-file: meta/requirements.yml
    }
    driver: { name: podman }
    lint: set -e; ansible-lint
    provisioner: {
      name: ansible,
      config_options: {
        defaults: {
          interpreter_python: auto_silent,
          callback_whitelist: "profile_tasks, timer, yaml",
        },
        ssh_connection: { pipelining: true }
      },
      log: true,
      playbooks: {
        converge: ../resources/playbooks/converge.yml,
        verify: ../resources/playbooks/verify.yml,
      },
    }
    verifier: { name: ansible }

mole_playbooks:
  - name: resources/playbooks/prepare.yml
    content: |-
      - name: "PLAYBOOK | Prepare | {{ meta_role_name }}"
        hosts: all
        become: true
        gather_facts: true
        tasks:
          - name: "Update apk cache and installed packages"
            community.general.apk:
              available: true
              update_cache: true
              upgrade: true
            when: ansible_pkg_mgr == "apk"
          - name: "Update apt cache and installed packages"  # noqa: package-latest
            ansible.builtin.apt:
              force_apt_get: true
              state: latest
              update_cache: true
            when: ansible_pkg_mgr == "apt"
          - name: "Update dnf cache and installed packages"  # noqa: package-latest
            ansible.builtin.dnf:
              name: "*"
              state: latest
              update_cache: true
            when: ansible_pkg_mgr == "dnf"
          - name: "Update pacman cache and installed packages"
            community.general.pacman:
              update_cache: true
              upgrade: true
            when: ansible_pkg_mgr == "pacman"
          - name: "Update zypper cache and installed packages"  # noqa: package-latest
            community.general.zypper:
              name: "*"
              state: latest
              update_cache: true
            when: ansible_pkg_mgr == "zypper"
  - name: resources/playbooks/converge.yml
    content: |-
      - name: "PLAYBOOK | Converge | {{ meta_role_name }}"
        hosts: all
        gather_facts: true
        roles:
          - role: "{{ '{% raw %}{{' }} lookup('ansible.builtin.env', 'MOLECULE_PROJECT_DIRECTORY') {{ '}}{% endraw %}' }}"
  - name: resources/playbooks/verify.yml
    content: |-
      - name: "PLAYBOOK | Verify | {{ meta_role_name }}"
        hosts: all
        gather_facts: false
        tasks:
          - name: "Assert true"
            ansible.builtin.assert:
              that: "true"
              fail_msg: "This should never fail"

# default list of paths to remove from relative role path
remove:
  - .ansible-lint.yml
  - .github
  - .travis.yml
  - .travis.build.yml
  - .yamllint.yml
  - Makefile
  - requirements.txt
  - tasks.yml
  - tox.ini
